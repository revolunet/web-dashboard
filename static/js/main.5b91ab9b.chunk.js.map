{"version":3,"sources":["utils.ts","components/Grade.tsx","components/Dashboard.tsx","components/Gauge.tsx","components/Panel.tsx","components/LightHouse.tsx","components/SSL.tsx","components/HTTP.tsx","components/Trackers.tsx","components/Owasp.tsx","components/Nuclei.tsx","components/Sidebar.tsx","App.tsx","index.tsx"],"names":["smallUrl","url","toLowerCase","replace","Grade","grade","label","variant","Badge","style","fontSize","undefined","scoreToGrade","score","x1","x2","grades","split","Math","min","length","floor","Dashboard","report","console","log","Table","striped","bordered","hover","className","Object","keys","map","key","a11y","lhr","result","categories","accessibility","webPerf","performance","seo","ssl","endpoints","http","owaspAlerts","owasp","site","alerts","filter","a","riskcode","trackers","trackersGrade","nuclei","n","info","severity","nucleiGrade","owaspMax","max","o","parseInt","owaspGrade","to","href","target","Gauge","props","canvas","useRef","span","gauge","useEffect","current","donut","Donut","CanvasGauge","setTextField","setOptions","options","maxValue","setMinValue","minValue","animationSpeed","set","value","textChangeHandler","passThroughProps","ref","display","defaultProps","percentColors","angle","lineWidth","radiusScale","pointer","strokeWidth","color","strokeColor","generateGradient","highDpiSupport","Panel","title","children","Card","Title","background","padding","fontWeight","marginLeft","float","Body","LightHouse","data","filename","row","Row","i","category","Col","xs","md","lg","width","height","SSL","endpoint","host","statusMessage","hasWarnings","ipAddress","Alert","HttpRowBadge","abs","score_modifier","HTTP","failures","details","pass","sort","b","failure","name","score_description","Trackers","cookies","marginBottom","colSpan","cookie","domain","httpOnly","secure","templateID","tracker","type","orderBySeverity","order","confidence","OwaspBadge","riskdesc","Owasp","flatMap","alert","count","NucleiBadge","nucleiSeverities","nucleiOrder","indexOf","Nuclei","rows","matcher_name","Sidebar","urls","Nav","activeClassName","exact","size","marginTop","marginRight","TopBar","Navbar","bg","sticky","expand","Brand","FormControl","placeholder","UrlDetail","useParams","urlData","App","Container","fluid","role","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5b91ab9b.chunk.js","sourcesContent":["export const smallUrl = (url: string) =>\n  url\n    .toLowerCase()\n    .replace(/^https?:\\/\\/(www\\.)?/, \"\")\n    .replace(/\\/$/, \"\");\n","import * as React from \"react\";\n\nimport { Badge } from \"react-bootstrap\";\n\ntype GradeProps = { grade: string; label?: string };\n\nexport const Grade: React.FC<GradeProps> = ({ grade, label }) => {\n  const variant =\n    grade === \"F\"\n      ? \"danger\"\n      : grade === \"E\"\n      ? \"danger\"\n      : grade === \"D\"\n      ? \"warning\"\n      : grade === \"C\"\n      ? \"warning\"\n      : grade === \"B\"\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge variant={variant} style={{ fontSize: \"2em\" }}>\n      {label !== undefined ? label : grade}\n    </Badge>\n  );\n};\n","import * as React from \"react\";\n\nimport { Nav, Table, Badge } from \"react-bootstrap\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport { smallUrl } from \"../utils\";\n\nimport { Grade } from \"./Grade\";\n\ntype DashboardProps = { report: any };\n\nconst remap = (value: number, x1: number, y1: number, x2: number, y2: number) =>\n  ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n\nconst scoreToGrade = (score: number) => {\n  const grades = \"A,B,C,D,E,F\".split(\",\");\n\n  const newGrade = Math.min(\n    grades.length - 1,\n    Math.floor(remap(score, 0, 1, 0, 6))\n  );\n\n  return grades[newGrade];\n};\n\nexport const Dashboard: React.FC<DashboardProps> = ({ report }) => {\n  console.log(\"report\", report);\n\n  return (\n    <div>\n      <br />\n      <h3>Results</h3>\n      <br />\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>url</th>\n            <th className=\"text-center\">a11y</th>\n            <th className=\"text-center\">perf</th>\n            <th className=\"text-center\">SEO</th>\n            <th className=\"text-center\">SSL</th>\n            <th className=\"text-center\">HTTP</th>\n            <th className=\"text-center\">OWASP</th>\n            <th className=\"text-center\">Trackers</th>\n            <th className=\"text-center\">Nuclei</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(report).map((key) => {\n            const a11y =\n              report[key].lhr.length &&\n              report[key].lhr[0].result.categories.accessibility.score;\n            const webPerf =\n              report[key].lhr.length &&\n              report[key].lhr[0].result.categories.performance.score;\n            const seo =\n              report[key].lhr.length &&\n              report[key].lhr[0].result.categories.seo.score;\n            const ssl = report[key].ssl[0].result.endpoints[0].grade;\n            const http = report[key].http[0].result.grade;\n            const owaspAlerts =\n              (report[key].owasp.length &&\n                report[key].owasp[0].result.site[0].alerts.filter(\n                  (a: any) => a.riskcode !== \"0\"\n                )) ||\n              [];\n            const owasp = owaspAlerts.length;\n            const trackers = report[key].trackers[0].trackers.length;\n            const trackersGrade =\n              trackers > 10\n                ? \"F\"\n                : trackers > 4\n                ? \"C\"\n                : trackers > 0\n                ? \"B\"\n                : \"A\";\n            const nuclei = report[key].nuclei.filter(\n              (n: any) => n.info.severity !== \"info\"\n            ).length;\n            const nucleiGrade = report[key].nuclei.filter(\n              (n: any) =>\n                n.info.severity === \"critical\" || n.info.severity === \"high\"\n            ).length\n              ? \"F\"\n              : nuclei.length\n              ? \"B\"\n              : \"A\";\n            const owaspMax = Math.max(\n              ...owaspAlerts.map((o: any) => parseInt(o.riskcode) || 0)\n            );\n\n            console.log(\n              \"owaspAlerts.map((o: any) => parseInt(o.riskcode) || 0)\",\n              owaspAlerts.map((o: any) => parseInt(o.riskcode) || 0),\n              owaspMax\n            );\n            const owaspGrade =\n              owaspMax > 3\n                ? \"F\"\n                : owaspMax > 2\n                ? \"D\"\n                : owaspMax > 1\n                ? \"C\"\n                : owaspMax > 0\n                ? \"B\"\n                : \"A\";\n            return (\n              <tr key={key}>\n                <td>\n                  <Link to={`/url/${key}`}>{smallUrl(key)}</Link>\n                </td>\n                <td className=\"text-center\">\n                  <Grade grade={scoreToGrade(a11y)} label={a11y} />\n                </td>\n                <td className=\"text-center\">\n                  <Grade grade={scoreToGrade(webPerf)} label={webPerf} />\n                </td>\n                <td className=\"text-center\">\n                  <Grade grade={scoreToGrade(seo)} label={seo} />\n                </td>\n                <td className=\"text-center\">\n                  {ssl ? <Grade grade={ssl} /> : <Grade grade=\"F\" label=\"-\" />}\n                </td>\n                <td className=\"text-center\">\n                  {http ? (\n                    <Grade grade={http} />\n                  ) : (\n                    <Grade grade=\"F\" label=\"-\" />\n                  )}\n                </td>\n                <td className=\"text-center\">\n                  <Grade grade={owaspGrade} label={owasp} />\n                </td>\n                <td className=\"text-center\">\n                  <Grade grade={trackersGrade} label={trackers} />\n                </td>\n                <td className=\"text-center\">\n                  <Grade grade={nucleiGrade} label={nuclei} />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <br />\n      <br />\n      <h3>Methodology</h3>\n      <p>\n        This dashboard is based on third-parties tools and is generated once a\n        week.\n      </p>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>tool</th>\n            <th>usage</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>\n              <a\n                href=\"https://developers.google.com/web/tools/lighthouse\"\n                target=\"_blank\"\n              >\n                Google LightHouse\n              </a>\n            </td>\n            <td>Automated tool for improving the quality of web pages.</td>\n          </tr>\n          <tr>\n            <td>\n              <a href=\"https://www.zaproxy.org/\" target=\"_blank\">\n                ZA proxy\n              </a>\n            </td>\n            <td>\n              Run OWASP ZAP Baseline scan to find vulnerabilities in your web\n              application.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <a href=\"https://www.ssllabs.com/\" target=\"_blank\">\n                SSLLabs\n              </a>\n            </td>\n            <td>Deep analysis of SSL configuration</td>\n          </tr>\n          <tr>\n            <td>\n              <a href=\"https://observatory.mozilla.org/\" target=\"_blank\">\n                Mozilla HTTP observatory\n              </a>\n            </td>\n            <td>Mozilla's web security guidelines scan</td>\n          </tr>\n          <tr>\n            <td>Trackers</td>\n            <td>Built-in third-party trackers list</td>\n          </tr>\n          <tr>\n            <td>\n              <a href=\"https://nuclei.projectdiscovery.io/\" target=\"_blank\">\n                Nuclei\n              </a>\n            </td>\n            <td>Scan server misconfigurations</td>\n          </tr>\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport { Gauge as CanvasGauge, Donut } from \"gaugeJS/dist/gauge.min\";\n\n// copied from https://unpkg.com/react-gaugejs@1.2.1/Gauge.js due to bad transpilation\n\ntype GaugeProps = {\n  maxValue?: number;\n  minValue?: number;\n  width?: number;\n  height?: number;\n  animationSpeed?: number;\n  options?: object;\n  donut?: boolean;\n  value: number;\n  className?: string;\n};\n\n/**\n * React wrapper for GaugeJS.\n * @param {*} props\n * @return {Object} React element\n */\nexport const Gauge: React.FC<GaugeProps> = (props) => {\n  const canvas = useRef();\n  const span = useRef();\n  const gauge = useRef();\n\n  useEffect(() => {\n    gauge.current = props.donut\n      ? new Donut(canvas.current)\n      : new CanvasGauge(canvas.current);\n    gauge.current.setTextField(span.current);\n    gauge.current.setOptions(props.options);\n    gauge.current.maxValue = props.maxValue;\n    gauge.current.setMinValue(props.minValue);\n    gauge.current.animationSpeed = props.animationSpeed;\n    gauge.current.set(props.value);\n  }, [props.donut]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    gauge.current.setOptions(props.options);\n  }, [props.options]);\n\n  useEffect(() => {\n    gauge.current.maxValue = props.maxValue;\n  }, [props.maxValue]);\n\n  useEffect(() => {\n    gauge.current.setMinValue(props.minValue);\n  }, [props.minValue]);\n\n  useEffect(() => {\n    gauge.current.animationSpeed = props.animationSpeed;\n  }, [props.animationSpeed]);\n\n  useEffect(() => {\n    gauge.current.set(props.value);\n  }, [props.value]);\n\n  /* eslint-disable no-unused-vars */\n  const {\n    maxValue,\n    minValue,\n    animationSpeed,\n    options,\n    donut,\n    value,\n    textChangeHandler,\n    ...passThroughProps\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  return (\n    <>\n      <canvas\n        ref={canvas}\n        className=\"gauge-canvas\"\n        {...passThroughProps}\n      ></canvas>\n      <span ref={span} style={{ display: \"none\" }}></span>\n    </>\n  );\n};\n\nGauge.defaultProps = {\n  maxValue: 3000,\n  minValue: 0,\n  animationSpeed: 32,\n  options: {\n    // staticLabels: {\n    //   font: \"10px sans-serif\", // Specifies font\n    //   labels: [100, 130, 150, 220.1, 260, 300], // Print labels at these values\n    //   color: \"#000000\", // Optional: Label text color\n    //   fractionDigits: 0, // Optional: Numerical precision. 0=round off.\n    // },\n    percentColors: [\n      [0.0, \"#FF4E42\"],\n      [0.5, \"#ffa400\"],\n      [0.9, \"#0CCE6B\"],\n      //[0.90, \"#ffa400\"],\n      //  [0.3, \"#ff0000\"],\n      // [0.5, \"#f9c802\"],\n      [1, \"#0CCE6B\"],\n    ],\n    angle: 0.25,\n    lineWidth: 0.44,\n    radiusScale: 1,\n    pointer: {\n      length: 0.6,\n      strokeWidth: 0.035,\n      color: \"#333\",\n    },\n    //limitMax: false,\n    //limitMin: false,\n    //colorStart: \"red\",\n    //colorStop: \"pink\",\n    strokeColor: \"#FF4E42\",\n    generateGradient: true,\n    highDpiSupport: true,\n  },\n  donut: false,\n  textChangeHandler: () => {},\n};\n\nexport default Gauge;\n","import * as React from \"react\";\n\nimport { Card } from \"react-bootstrap\";\nimport { ExternalLink } from \"react-feather\";\n\ntype PanelProps = {\n  title: string;\n  children: any;\n  info?: string;\n  url?: string;\n};\n\nexport const Panel: React.FC<PanelProps> = ({ title, children, info, url }) => (\n  <Card>\n    <Card.Title style={{ background: \"#000091\", color: \"white\", padding: 10 }}>\n      {title}\n      {info && (\n        <span\n          style={{ fontWeight: \"normal\", fontSize: \"0.6em\", marginLeft: 10 }}\n        >\n          {info}\n        </span>\n      )}\n      {url && (\n        <a\n          style={{ color: \"white\", float: \"right\" }}\n          href={url}\n          target=\"_blank\"\n        >\n          <ExternalLink />\n        </a>\n      )}\n    </Card.Title>\n    <Card.Body>{children}</Card.Body>\n  </Card>\n);\n","import * as React from \"react\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nimport { Gauge } from \"./Gauge\";\nimport { Panel } from \"./Panel\";\n\ntype Category = {\n  score: number;\n  [any: string]: any;\n};\n\ntype LightHouseProps = { data: any };\n\nexport const LightHouse: React.FC<LightHouseProps> = ({ data }) => {\n  const url =\n    data.length && `/report/${data[0].filename.replace(/\\.json$/, \".html\")}`;\n\n  return (\n    url && (\n      <Panel\n        title=\"LightHouse\"\n        info=\"Informations collectées par l'outil Google LightHouse\"\n        url={url}\n      >\n        {data.map((row: any) => {\n          return (\n            <Row key={row.url}>\n              {Object.keys(row.result.categories)\n                .filter((key) => key !== \"pwa\")\n                .map((key: any, i: number) => {\n                  const category = row.result.categories[key] as Category;\n                  return (\n                    <Col\n                      key={category.title}\n                      xs={12}\n                      md={6}\n                      lg={3}\n                      className=\"text-center mb-3\"\n                    >\n                      <Card>\n                        <Gauge\n                          width={100}\n                          height={60}\n                          value={category.score * 100}\n                          minValue={0}\n                          maxValue={100}\n                          animationSpeed={32}\n                        />\n                        <Card.Body>\n                          <Card.Title>{category.title}</Card.Title>\n                          <Card.Title\n                            style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}\n                          >\n                            {category.score}\n                          </Card.Title>\n                        </Card.Body>\n                      </Card>\n                    </Col>\n                  );\n                })}\n            </Row>\n          );\n        })}\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Row, Col, Alert } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype SSLProps = { data: any };\n\nexport const SSL: React.FC<SSLProps> = ({ data }) => {\n  const firstGrade = data[0].result.endpoints[0].grade;\n  const url =\n    data.length &&\n    `https://www.ssllabs.com/ssltest/analyze.html?d=${data[0].url}`;\n  return (\n    url && (\n      <Panel title=\"SSL\" info=\"Informations collectées via SSLlabs\" url={url}>\n        {data.map((row: any) => {\n          return (\n            <React.Fragment key={row.url}>\n              <Row>\n                <Col>\n                  {row.result.endpoints.map((endpoint: any, i: number) => {\n                    return (\n                      <div key={endpoint.host + i}>\n                        {endpoint.host}\n                        <h6>\n                          {(endpoint.statusMessage === \"Ready\" && (\n                            <div>\n                              <Grade grade={endpoint.grade} />\n                              <br />\n                              <br />\n                              {endpoint.hasWarnings && (\n                                <div>Certificate has WARNINGS</div>\n                              )}\n                              <br />\n                              IP: {endpoint.ipAddress}\n                            </div>\n                          )) || (\n                            <Alert variant=\"danger\">\n                              {endpoint.statusMessage}\n                            </Alert>\n                          )}\n                        </h6>\n                      </div>\n                    );\n                  })}\n                </Col>\n              </Row>\n            </React.Fragment>\n          );\n        })}\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype HTTPProps = { data: any };\n\nconst HttpRowBadge = (row: any) => {\n  const severity = Math.abs(row.score_modifier);\n  const variant =\n    severity > 50\n      ? \"danger\"\n      : severity > 30\n      ? \"danger\"\n      : severity > 20\n      ? \"warning\"\n      : severity > 10\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nexport const HTTP: React.FC<HTTPProps> = ({ data }) => {\n  const url =\n    data.length && `https://observatory.mozilla.org/analyze/${data[0].url}`;\n  return (\n    url && (\n      <Panel\n        title=\"HTTP\"\n        info=\"Informations collectées par le Mozilla HTTP observatory\"\n        url={url}\n      >\n        {data.map((row: any) => {\n          const failures = Object.keys(row.result.details)\n            .filter((key) => !row.result.details[key].pass)\n            .map((key) => row.result.details[key]);\n          failures.sort((a, b) => a.score_modifier - b.score_modifier);\n          return (\n            <div key={row.url}>\n              <Grade grade={row.result.grade} />\n              <br />\n              <br />\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>id</th>\n                    <th>impact</th>\n                    <th>description</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {failures.map((failure, i) => (\n                    <tr key={failure.name + i}>\n                      <td>{failure.name}</td>\n                      <td>\n                        <HttpRowBadge {...failure} />\n                      </td>\n                      <td>{failure.score_description}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n            </div>\n          );\n        })}\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\ntype TrackersProps = { data: any };\n\nexport const Trackers: React.FC<TrackersProps> = ({ data }) => {\n  const rows = data;\n  //rows.sort(nucleiOrder);\n  return (\n    <Panel title=\"Trackers\">\n      {data.map((row: any) => {\n        return (\n          <div key={row.url}>\n            {(row.cookies && row.cookies.length && (\n              <Table striped bordered hover style={{ marginBottom: 10 }}>\n                <thead>\n                  <tr>\n                    <th className=\"bg-dark text-white\" colSpan={4}>\n                      Cookies\n                    </th>\n                  </tr>\n                  <tr>\n                    <th>name</th>\n                    <th>domain</th>\n                    <th className=\"text-center\">httpOnly</th>\n                    <th className=\"text-center\">secure</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {row.cookies.map((cookie: any, i: number) => {\n                    return (\n                      <tr key={cookie.templateID + i}>\n                        <td>{cookie.name}</td>\n                        <td>{cookie.domain}</td>\n                        <td className=\"text-center\">\n                          {cookie.httpOnly ? \"✔️\" : \"❌\"}\n                        </td>\n                        <td className=\"text-center\">\n                          {cookie.secure ? \"✔️\" : \"❌\"}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            )) ||\n              null}\n            {(row.trackers && row.trackers.length && (\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th className=\"bg-dark text-white\" colSpan={4}>\n                      Third-parties ressources\n                    </th>\n                  </tr>\n                  <tr>\n                    <th>type</th>\n                    <th>value</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {row.trackers.map((tracker: any, i: number) => {\n                    return (\n                      <tr key={tracker.value + i}>\n                        <td>{tracker.type}</td>\n                        <td>{tracker.value}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            )) ||\n              null}\n          </div>\n        );\n      })}\n    </Panel>\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: any, b: any) => {\n  // high criticity first\n  const order = parseInt(b.riskcode) - parseInt(a.riskcode);\n  if (order === 0) {\n    // high confidence first\n    return parseInt(b.confidence) - parseInt(a.confidence);\n  }\n  return order;\n};\n\nconst OwaspBadge = (row: any) => {\n  const severity = row.riskcode;\n  const variant =\n    severity === \"0\"\n      ? \"info\"\n      : severity === \"1\"\n      ? \"warning\"\n      : severity === \"2\"\n      ? \"danger\"\n      : severity === \"3\"\n      ? \"danger\"\n      : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {row.riskdesc}\n    </Badge>\n  );\n};\n\ntype OwaspProps = { data: any };\n\nexport const Owasp: React.FC<OwaspProps> = ({ data }) => {\n  const alerts = data.flatMap((row: any) => {\n    return row.result && row.result.site.flatMap((site: any) => site.alerts);\n  });\n  alerts.sort(orderBySeverity);\n  const url =\n    data.length && `/report/${data[0].filename.replace(/\\.json$/, \".html\")}`;\n  return (\n    (alerts.length && (\n      <Panel title=\"OWASP\" url={url}>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>name</th>\n              <th>count</th>\n              <th>riskdesc</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alerts.map((alert: any) => {\n              return (\n                <tr key={alert.name}>\n                  <td>{alert.name}</td>\n                  <td className=\"text-center\">{alert.count}</td>\n                  <td>\n                    <OwaspBadge {...alert} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype NucleiProps = { data: any };\n\nconst NucleiBadge = (row: any) => {\n  const severity = (row.info && row.info.severity) || \"critical\";\n  const variant =\n    severity === \"critical\"\n      ? \"danger\"\n      : severity === \"high\"\n      ? \"danger\"\n      : severity === \"medium\"\n      ? \"warning\"\n      : severity === \"low\"\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nconst nucleiSeverities = \"info,low,medium,high,critical\".split(\",\");\n\nconst nucleiOrder = (a: any, b: any) => {\n  return (\n    nucleiSeverities.indexOf(a.info.severity) -\n    nucleiSeverities.indexOf(b.info.severity)\n  );\n};\n\nexport const Nuclei: React.FC<NucleiProps> = ({ data }) => {\n  const rows = data;\n  rows.sort(nucleiOrder);\n  return (\n    <Panel title=\"Nuclei\" info=\"Metriques collectées par nuclei\">\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>id</th>\n            <th>severity</th>\n            <th>name</th>\n            <th>matcher</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((failure: any) => {\n            return (\n              <tr key={failure.templateID}>\n                <td>{failure.templateID}</td>\n                <td>\n                  <NucleiBadge {...failure} />\n                </td>\n                <td>{failure.info.name}</td>\n                <td>{failure.matcher_name}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </Panel>\n  );\n};\n","import * as React from \"react\";\n\nimport { Nav, Table, Badge } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { Home, Search } from \"react-feather\";\n\nimport { smallUrl } from \"../utils\";\n\ntype SidebarProps = {\n  urls: any[];\n};\n\nexport const Sidebar: React.FC<SidebarProps> = ({ urls }) => {\n  return (\n    <Nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n      <div className=\"sidebar-sticky pt-3\">\n        <ul className=\"nav flex-column\">\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <Home size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Dashboard\n            </NavLink>\n          </li>\n        </ul>\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>Urls</span>\n        </h6>\n\n        <ul className=\"nav flex-column\">\n          {urls.map((url) => (\n            <li className=\"nav-item\" key={url}>\n              <NavLink\n                className=\"nav-link\"\n                to={`/url/${url}`}\n                activeClassName=\"active\"\n              >\n                <Search size={16} style={{ marginTop: -5, marginRight: 5 }} />\n                {smallUrl(url)}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Nav>\n  );\n};\n","import * as React from \"react\";\nimport { Home, Search, Cloud, ExternalLink } from \"react-feather\";\n\nimport {\n  Alert,\n  CardDeck,\n  Badge,\n  Card,\n  Container,\n  Row,\n  Col,\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  Button,\n  Table,\n} from \"react-bootstrap\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n  useParams,\n} from \"react-router-dom\";\n\nimport report from \"./report.json\";\n\nimport { Dashboard } from \"./components/Dashboard\";\nimport { LightHouse } from \"./components/LightHouse\";\nimport { SSL } from \"./components/SSL\";\nimport { HTTP } from \"./components/HTTP\";\nimport { Trackers } from \"./components/Trackers\";\nimport { Owasp } from \"./components/Owasp\";\nimport { Nuclei } from \"./components/Nuclei\";\nimport { Sidebar } from \"./components/Sidebar\";\n\nconst TopBar = () => (\n  <Navbar\n    variant=\"dark\"\n    bg=\"dark\"\n    sticky=\"top\"\n    expand=\"lg\"\n    className=\"p-0 flex-md-nowrap shadow\"\n  >\n    <Navbar.Brand className=\"px-3 col-sm-2 col-md-3 col-lg-2 mr-0\" href=\"/\">\n      <Cloud size={16} style={{ marginTop: -5, marginRight: 10 }} />\n      Meteo web\n    </Navbar.Brand>\n    <FormControl\n      type=\"text\"\n      placeholder=\"Search url\"\n      className=\" form-control-dark w-100\"\n    />\n  </Navbar>\n);\n\ntype UrlDetailProps = {};\n\ninterface ParamTypes {\n  url: string;\n}\n\nconst UrlDetail: React.FC<UrlDetailProps> = ({ ...props }) => {\n  const { url } = useParams<ParamTypes>();\n  //@ts-expect-error\n  const urlData = report[url] as any;\n  return (\n    <div>\n      <LightHouse data={urlData.lhr} />\n      <br />\n      <SSL data={urlData.ssl} />\n      <br />\n      <HTTP data={urlData.http} />\n      <br />\n      <Nuclei data={urlData.nuclei} />\n      <br />\n      <Trackers data={urlData.trackers} />\n      <br />\n      <Owasp data={urlData.owasp} />\n    </div>\n  );\n};\n\nconst App = () => {\n  const urls = Object.keys(report);\n  return (\n    <Router>\n      <div>\n        <TopBar />\n        <Container fluid>\n          <Row>\n            <Sidebar urls={urls} />\n            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n              <Switch>\n                <Route path=\"/url/:url\">\n                  <UrlDetail />\n                </Route>\n                <Route path=\"/\">\n                  <Dashboard report={report} />\n                </Route>\n              </Switch>\n            </main>\n          </Row>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport \"./bootstrap-theme.scss\";\nimport \"./custom.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}